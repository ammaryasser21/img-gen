import type { Metadata } from "next";
import { Inter, Cairo } from "next/font/google"; // Import Cairo
import "./globals.css";


// Instantiate Inter (optional, if you use it as fallback or elsewhere)
const inter = Inter({
    subsets: ["latin"],
    variable: "--font-inter", // Define CSS variable for Inter
});

// Instantiate Cairo font with desired weights and subsets
const cairo = Cairo({
  subsets: ["latin", "arabic"], // Include 'arabic' if needed
  weight: ["300", "400", "600", "700"], // Include weights used in your design (light, regular, semibold, bold)
  variable: "--font-cairo", // Define CSS variable for Cairo
});

export const metadata: Metadata = {
  title: "AI Image Generator - FLUX", // Updated title
  description: "Generate AI images using a dedicated FLUX model via Friendli.ai", // Updated description
  // Favicon tags are auto-generated by Next.js from files in /app directory
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    // Apply font variables to the html tag for global availability
    <html lang="en" className={`${inter.variable} ${cairo.variable}`} suppressHydrationWarning>
      {/* Use font-sans which will map to Cairo via Tailwind config */}
      <body className={`font-sans antialiased`}> {/* Apply base font class */}
        
          {children}
        
      </body>
    </html>
  );
}